{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Text, Card } from '@rneui/themed';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function products(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    Products = _useState2[0],\n    setProducts = _useState2[1];\n  useEffect(function () {\n    axios.get(\"https://dummyjson.com/products\").then(function (res) {\n      return setProducts(res.data.products);\n    }).catch(function (err) {\n      return alert(err);\n    });\n  }, []);\n  return _jsxs(ScrollView, {\n    children: [_jsx(Text, {\n      style: {\n        color: \"red\",\n        fontWeight: \"700\"\n      },\n      children: \"  List Of Products    \"\n    }), Products.map(function (Product, index) {\n      return _jsxs(Card, {\n        children: [_jsx(Card.Title, {\n          style: {\n            color: \"orange\"\n          },\n          children: Product.title\n        }), _jsx(Card.Divider, {}), _jsx(Card.Image, {\n          style: {\n            padding: 0\n          },\n          source: {\n            uri: Product.images[0]\n          }\n        }), _jsxs(Text, {\n          style: {\n            marginBottom: 10\n          },\n          children: [\" \", Product.description]\n        }), _jsx(Button, {\n          color: \"orange\",\n          title: \"ProductDetails\",\n          onPress: function onPress() {\n            return navigation.navigate(\"productDetails\", {\n              id: Product.id\n            });\n          }\n        })]\n      }, index);\n    })]\n  });\n}","map":{"version":3,"names":["axios","React","useEffect","useState","Text","Card","Button","ScrollView","jsx","_jsx","jsxs","_jsxs","products","_ref","navigation","_useState","_useState2","_slicedToArray","Products","setProducts","get","then","res","data","catch","err","alert","children","style","color","fontWeight","map","Product","index","Title","title","Divider","Image","padding","source","uri","images","marginBottom","description","onPress","navigate","id"],"sources":["E:/Education/ITI Training/ReactNative/lab2/src/components/product/product.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Text, Card } from '@rneui/themed';\r\nimport { Button, ScrollView } from 'react-native';\r\n\r\n\r\nexport default function products({navigation}) {\r\n\r\n    const [Products, setProducts] = useState([])\r\n\r\n    useEffect(() => {\r\n        // call api --> axios \r\n\r\n        axios.get(\"https://dummyjson.com/products\")\r\n        .then((res) => setProducts(res.data.products))\r\n\r\n        .catch((err) => alert(err))\r\n\r\n    }, [])\r\n\r\n       \r\n  return (\r\n       \r\n      <ScrollView>\r\n        <Text style={{ color: \"red\" , fontWeight:\"700\" }}>  List Of Products    </Text>\r\n\r\n        {Products.map((Product, index)  => {\r\n            return(\r\n                <Card key={index}>\r\n                    <Card.Title style={{ color: \"orange\" }}>{Product.title}</Card.Title>\r\n                    <Card.Divider />\r\n                    <Card.Image\r\n                    style={{ padding: 0 }}\r\n                    source={{\r\n                        uri: Product.images[0]\r\n                        \r\n                    }}\r\n                    />\r\n                    <Text style={{ marginBottom: 10 }}> {Product.description}\r\n                    </Text>\r\n\r\n                    <Button color=\"orange\" title='ProductDetails' onPress={() => navigation.navigate(\"productDetails\", {id: Product.id})} />\r\n           \r\n                </Card>\r\n            )\r\n\r\n\r\n        }  )}\r\n      </ScrollView>\r\n     \r\n  );\r\n}\r\n\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,QAAQ,eAAe;AAAC,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI3C,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAe;EAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAExC,IAAAC,SAAA,GAAgCZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5Bd,SAAS,CAAC,YAAM;IAGZF,KAAK,CAACoB,GAAG,CAAC,gCAAgC,CAAC,CAC1CC,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKH,WAAW,CAACG,GAAG,CAACC,IAAI,CAACX,QAAQ,CAAC;IAAA,EAAC,CAE7CY,KAAK,CAAC,UAACC,GAAG;MAAA,OAAKC,KAAK,CAACD,GAAG,CAAC;IAAA,EAAC;EAE/B,CAAC,EAAE,EAAE,CAAC;EAGR,OAEId,KAAA,CAACJ,UAAU;IAAAoB,QAAA,GACTlB,IAAA,CAACL,IAAI;MAACwB,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAGC,UAAU,EAAC;MAAM,CAAE;MAAAH,QAAA,EAAC;IAAsB,CAAM,CAAC,EAE9ET,QAAQ,CAACa,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK,EAAM;MAC/B,OACItB,KAAA,CAACN,IAAI;QAAAsB,QAAA,GACDlB,IAAA,CAACJ,IAAI,CAAC6B,KAAK;UAACN,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAS,CAAE;UAAAF,QAAA,EAAEK,OAAO,CAACG;QAAK,CAAa,CAAC,EACpE1B,IAAA,CAACJ,IAAI,CAAC+B,OAAO,IAAE,CAAC,EAChB3B,IAAA,CAACJ,IAAI,CAACgC,KAAK;UACXT,KAAK,EAAE;YAAEU,OAAO,EAAE;UAAE,CAAE;UACtBC,MAAM,EAAE;YACJC,GAAG,EAAER,OAAO,CAACS,MAAM,CAAC,CAAC;UAEzB;QAAE,CACD,CAAC,EACF9B,KAAA,CAACP,IAAI;UAACwB,KAAK,EAAE;YAAEc,YAAY,EAAE;UAAG,CAAE;UAAAf,QAAA,GAAC,GAAC,EAACK,OAAO,CAACW,WAAW;QAAA,CAClD,CAAC,EAEPlC,IAAA,CAACH,MAAM;UAACuB,KAAK,EAAC,QAAQ;UAACM,KAAK,EAAC,gBAAgB;UAACS,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM9B,UAAU,CAAC+B,QAAQ,CAAC,gBAAgB,EAAE;cAACC,EAAE,EAAEd,OAAO,CAACc;YAAE,CAAC,CAAC;UAAA;QAAC,CAAE,CAAC;MAAA,GAbjHb,KAeL,CAAC;IAIf,CAAG,CAAC;EAAA,CACM,CAAC;AAGnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}